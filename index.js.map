{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst loadingMessage = document.getElementById(\"loading-message\");\r\nconst myApiKey = \"48961514-d720aad073d42be14fd4daf93\";\r\nconst URL = \"https://pixabay.com/api/\";\r\n\r\nexport async function axiosImages(query) {\r\n    try {\r\n        const response = await axios.get(URL, {\r\n            params: {\r\n                key: myApiKey,\r\n                q: query,\r\n                image_type: \"photo\",\r\n                orientation: \"horizontal\",\r\n                safesearch: \"true\"\r\n            },\r\n        });\r\n        return response.data.hits;\r\n    } catch {\r\n        (error => {\r\n            console.error(\"Error fetching images:\", error);\r\n            iziToast.error({\r\n                message: \"An error occurred while fetching images. Please try again!\",\r\n                position: \"topRight\",\r\n                messageColor: \"#FAFAFB\",\r\n                backgroundColor: \"#EF4040\"\r\n            });\r\n        })\r\n        .finally(() => {\r\n            loadingMessage.style.display = \"none\";\r\n        });\r\n    }\r\n}","import SimpleLightbox from \"simplelightbox\";\r\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\r\n\r\nconst gallery = document.querySelector(\".gallery\");\r\n\r\nexport function displayImages(images) {\r\n    gallery.innerHTML = \"\";\r\n\r\n    const markup = images\r\n        .map(\r\n            (image) => `\r\n        <li class=\"img-card\">\r\n            <a href=\"${image.largeImageURL}\">\r\n                <img \r\n                    src=\"${image.webformatURL}\" \r\n                    alt=\"${image.tags}\" \r\n                    data-source=\"${image.largeImageURL}\" \r\n                />\r\n            </a>\r\n            <div class=\"image-info\">\r\n                <p><strong>Likes:</strong> ${image.likes}</p>\r\n                <p><strong>Views:</strong> ${image.views}</p>\r\n                <p><strong>Comments:</strong> ${image.comments}</p>\r\n                <p><strong>Downloads:</strong> ${image.downloads}</p>\r\n            </div>\r\n        </li>`\r\n        )\r\n        .join(\"\");\r\n\r\n    gallery.innerHTML = `${markup}`;\r\n\r\n    const lightbox = new SimpleLightbox(\".gallery a\", {\r\n        captionsData: \"alt\",\r\n        captionDelay: 250,\r\n    });\r\n\r\n    lightbox.refresh();\r\n}\r\n","import { axiosImages } from \"./js/pixabay-api\";\r\nimport iziToast from \"izitoast\";\r\nimport \"izitoast/dist/css/iziToast.min.css\";\r\nimport { displayImages } from \"./js/render-functions.js\"; \r\n\r\nconst form = document.querySelector(\"form\");\r\nconst loadingMessage = document.getElementById(\"loading-message\");\r\n\r\nform.addEventListener(\"submit\", async (evt) => {\r\n    evt.preventDefault();\r\n\r\n    const input = evt.target.querySelector(\"input\");\r\n    const inputValue = input.value.trim();\r\n\r\n    if (inputValue === \"\") {\r\n        iziToast.error({\r\n            message: \"Please fill in the field!\",\r\n            position: \"topRight\",\r\n            messageColor: \"#FAFAFB\",\r\n            backgroundColor: \"#EF4040\"\r\n        });\r\n        return;\r\n    }\r\n\r\n    if (loadingMessage) loadingMessage.style.display = \"block\";\r\n\r\n    try {\r\n        const images = await axiosImages(inputValue);\r\n\r\n        if (!images || images.length === 0) {\r\n            iziToast.warning({\r\n                message: \"Sorry, there are no images matching your search query. Please try again!\",\r\n                position: \"topRight\",\r\n                messageColor: \"#FAFAFB\",\r\n                backgroundColor: \"#EF4040\"\r\n            });\r\n            return;\r\n        }\r\n        \r\n        displayImages(images);\r\n    } catch (error) {\r\n        iziToast.error({\r\n            message: \"Error\",\r\n            position: \"topRight\",\r\n            messageColor: \"#FAFAFB\",\r\n            backgroundColor: \"#EF4040\"\r\n        })\r\n    } finally {\r\n        if (loadingMessage) loadingMessage.style.display = \"none\";\r\n    }\r\n\r\n    form.reset();\r\n});\r\n\r\n"],"names":["loadingMessage","myApiKey","URL","axiosImages","query","axios","error","gallery","displayImages","images","markup","image","SimpleLightbox","form","evt","inputValue","iziToast"],"mappings":"wyBAEA,MAAMA,EAAiB,SAAS,eAAe,iBAAiB,EAC1DC,EAAW,qCACXC,EAAM,2BAEL,eAAeC,EAAYC,EAAO,CACrC,GAAI,CAUA,OATiB,MAAMC,EAAM,IAAIH,EAAK,CAClC,OAAQ,CACJ,IAAKD,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,MACf,CACb,CAAS,GACe,KAAK,IAC7B,MAAY,EACHE,GAAS,CACN,QAAQ,MAAM,yBAA0BA,CAAK,EAC7C,SAAS,MAAM,CACX,QAAS,6DACT,SAAU,WACV,aAAc,UACd,gBAAiB,SACjC,CAAa,CACJ,GACA,QAAQ,IAAM,CACXN,EAAe,MAAM,QAAU,MAC3C,CAAS,CACJ,CACL,CC7BA,MAAMO,EAAU,SAAS,cAAc,UAAU,EAE1C,SAASC,EAAcC,EAAQ,CAClCF,EAAQ,UAAY,GAEpB,MAAMG,EAASD,EACV,IACIE,GAAU;AAAA;AAAA,uBAEAA,EAAM,aAAa;AAAA;AAAA,2BAEfA,EAAM,YAAY;AAAA,2BAClBA,EAAM,IAAI;AAAA,mCACFA,EAAM,aAAa;AAAA;AAAA;AAAA;AAAA,6CAITA,EAAM,KAAK;AAAA,6CACXA,EAAM,KAAK;AAAA,gDACRA,EAAM,QAAQ;AAAA,iDACbA,EAAM,SAAS;AAAA;AAAA,cAGvD,EACA,KAAK,EAAE,EAEZJ,EAAQ,UAAY,GAAGG,CAAM,GAEZ,IAAIE,EAAe,aAAc,CAC9C,aAAc,MACd,aAAc,GACtB,CAAK,EAEQ,QAAO,CACpB,CChCA,MAAMC,EAAO,SAAS,cAAc,MAAM,EACpCb,EAAiB,SAAS,eAAe,iBAAiB,EAEhEa,EAAK,iBAAiB,SAAU,MAAOC,GAAQ,CAC3CA,EAAI,eAAc,EAGlB,MAAMC,EADQD,EAAI,OAAO,cAAc,OAAO,EACrB,MAAM,KAAI,EAEnC,GAAIC,IAAe,GAAI,CACnBC,EAAS,MAAM,CACX,QAAS,4BACT,SAAU,WACV,aAAc,UACd,gBAAiB,SAC7B,CAAS,EACD,MACH,CAEGhB,IAAgBA,EAAe,MAAM,QAAU,SAEnD,GAAI,CACA,MAAMS,EAAS,MAAMN,EAAYY,CAAU,EAE3C,GAAI,CAACN,GAAUA,EAAO,SAAW,EAAG,CAChCO,EAAS,QAAQ,CACb,QAAS,2EACT,SAAU,WACV,aAAc,UACd,gBAAiB,SACjC,CAAa,EACD,MACH,CAEDR,EAAcC,CAAM,CACvB,MAAe,CACZO,EAAS,MAAM,CACX,QAAS,QACT,SAAU,WACV,aAAc,UACd,gBAAiB,SAC7B,CAAS,CACT,QAAc,CACFhB,IAAgBA,EAAe,MAAM,QAAU,OACtD,CAEDa,EAAK,MAAK,CACd,CAAC"}